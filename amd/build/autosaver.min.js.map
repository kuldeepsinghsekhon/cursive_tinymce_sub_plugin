{"version":3,"file":"autosaver.min.js","sources":["../src/autosaver.js"],"sourcesContent":["\n\n/**\n * @module     tiny_cursive/plugin\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\nimport { call } from 'core/ajax';\nimport { create } from 'core/modal_factory';\nimport {get_string as getString} from 'core/str';\nimport {render} from 'core/templates';\nimport {save,cancel,hidden} from 'core/modal_events';//hidden\nimport jQuery from 'jquery';\nexport const register = (editor) => {\n    const postOne = (methodname, args) => call([{\n        methodname,\n        args,\n    }])[0];\n    var is_student=!(jQuery('#body').hasClass('teacher_admin'));\n    var intervention=jQuery('#body').hasClass('intervention');\n    const showLog=()=>{\n        window.console.log(editor);\n    };\n    const getModal = (e) => {\n        return create({\n            type:'SAVE_CANCEL',\n            title: getString('tiny_cursive','tiny_cursive'),\n            body:  render(\"tiny_cursive/popup_form\", \"\"),\n            removeOnClose: true,\n        },showLog())\n        .done(modal => {\n            modal.getRoot().append('<style>.close{ display: none ! important; }</style>');\n              modal.show();\n              var lastEvent='';\n              modal.getRoot().on(save, function() {\n                var number=document.getElementById(\"inputUrl\").value;\n                //var pastedtext=document.getElementById(\"pastetext\").value;\n                if (number === \"\" || number === null || number === undefined) {\n                    editor.execCommand('Undo');\n                    alert(\"You cannot paste text without providing source\");\n                } else {\n                 editor.execCommand('Paste');\n                }\n                let ur = e.srcElement.baseURI;\n                let parm = new URL(ur);\n                let recourceId=0;\n                let cmid=0;\n                let modulename=\"\";\n                if (ur.includes(\"attempt.php\")||ur.includes(\"forum\")||ur.includes(\"assign\")){\n                    //return true;\n                }else{\n                    return false;\n                }\n                if (ur.includes(\"forum\")||ur.includes(\"assign\")) {\n                    cmid=parm.searchParams.get('id');\n                }else{\n                    cmid=parm.searchParams.get('cmid');\n                    recourceId=parm.searchParams.get('attempt');\n                }\n                if(recourceId===null){\n                    recourceId=0;\n                }\n                if (ur.includes(\"forum\")){\n                    modulename=\"forum\";\n                }\n                if (ur.includes(\"assign\")){\n                    modulename=\"assign\";\n                }\n                if (ur.includes(\"attempt\")){\n                    modulename=\"quiz\";\n                }\n                if(cmid===null){ cmid=0;}\n                postOne('cursive_user_comments', {\n                    modulename: modulename,\n                    cmid: cmid,\n                    resourceid: recourceId,\n                    courseid: 0,\n                    usercomment:number,\n                    timemodified:\"1121232\"\n                });\n                lastEvent='save';\n                modal.destroy();\n              });\n                modal.getRoot().on(cancel, function() {\n                        editor.execCommand('Undo');\n                        lastEvent='cancel';\n                       // alert(\"You cannot paste text without providing source\");\n                    });\n                modal.getRoot().on(hidden, function() {\n                        if(lastEvent!='cancel'&& lastEvent!='save'){editor.execCommand('Undo');}\n                    });\n            return modal;\n        });\n    };\n    const sendKeyEvent=(event, ed)=>{\n         let ur = ed.srcElement.baseURI;\n         let parm = new URL(ur);\n         let recourceId=0;\n         let modulename=\"\";\n        let cmid=0;\n         if (ur.includes(\"attempt.php\")||ur.includes(\"forum\")||ur.includes(\"assign\")){\n            //return true;\n         }else{\n            return false;\n         }\n         if (ur.includes(\"forum\")||ur.includes(\"assign\")) {\n            cmid=parm.searchParams.get('id');\n        }else{\n            cmid=parm.searchParams.get('cmid');\n            recourceId=parm.searchParams.get('attempt');\n        }\n        if(recourceId===null){\n            recourceId=0;\n        }\n        if(cmid===null){ cmid=0;}\n        if (ur.includes(\"forum\")){\n            modulename=\"forum\";\n        }\n        if (ur.includes(\"assign\")){\n            modulename=\"assign\";\n        }\n        if (ur.includes(\"attempt\")){\n            modulename=\"quiz\";\n        }\n        postOne('cursive_json', {\n            key: ed.key,\n            event: event,\n            keyCode: ed.keyCode,\n            resourceId: recourceId,\n            cmid:cmid,\n            modulename:modulename\n        });\n    };\n    editor.on('keyUp', (editor) => {\n        sendKeyEvent(\"keyUp\", editor);\n    });\n    editor.on('Paste', async (e) => {\n        //e.preventDefault();\n        if(is_student && intervention){\n            getModal(e);\n        }\n    });\n    editor.on('Redo', async (e) => {\n        //e.preventDefault();\n        if(is_student  && intervention){\n            getModal(e);\n        }\n    });\n    editor.on('keyDown', (editor) => {\n        sendKeyEvent(\"keyDown\", editor);\n    });\n    editor.on('init', () => {\n        // Setup the Undo handler.\n    });\n\n};\n"],"names":["editor","postOne","methodname","args","is_student","hasClass","intervention","getModal","e","type","title","body","removeOnClose","window","console","log","done","modal","getRoot","append","show","lastEvent","on","save","number","document","getElementById","value","execCommand","alert","ur","srcElement","baseURI","parm","URL","recourceId","cmid","modulename","includes","searchParams","get","resourceid","courseid","usercomment","timemodified","destroy","cancel","hidden","sendKeyEvent","event","ed","key","keyCode","resourceId","async"],"mappings":"wXAeyBA,eACfC,QAAU,CAACC,WAAYC,QAAS,cAAK,CAAC,CACxCD,WAAAA,WACAC,KAAAA,QACA,OACAC,aAAa,mBAAO,SAASC,SAAS,iBACtCC,cAAa,mBAAO,SAASD,SAAS,sBAIpCE,SAAYC,IACP,yBAAO,CACVC,KAAK,cACLC,OAAO,mBAAU,eAAe,gBAChCC,MAAO,qBAAO,0BAA2B,IACzCC,eAAe,QAPnBC,OAAOC,QAAQC,IAAIf,SASlBgB,MAAKC,QACFA,MAAMC,UAAUC,OAAO,uDACrBF,MAAMG,WACFC,UAAU,UACdJ,MAAMC,UAAUI,GAAGC,oBAAM,eACnBC,OAAOC,SAASC,eAAe,YAAYC,MAEhC,KAAXH,QAAAA,MAAiBA,QACjBxB,OAAO4B,YAAY,QACnBC,MAAM,mDAET7B,OAAO4B,YAAY,aAEhBE,GAAKtB,EAAEuB,WAAWC,QAClBC,KAAO,IAAIC,IAAIJ,IACfK,WAAW,EACXC,KAAK,EACLC,WAAW,QACXP,GAAGQ,SAAS,gBAAgBR,GAAGQ,SAAS,UAAUR,GAAGQ,SAAS,kBAGvD,EAEPR,GAAGQ,SAAS,UAAUR,GAAGQ,SAAS,UAClCF,KAAKH,KAAKM,aAAaC,IAAI,OAE3BJ,KAAKH,KAAKM,aAAaC,IAAI,QAC3BL,WAAWF,KAAKM,aAAaC,IAAI,YAErB,OAAbL,aACCA,WAAW,GAEXL,GAAGQ,SAAS,WACZD,WAAW,SAEXP,GAAGQ,SAAS,YACZD,WAAW,UAEXP,GAAGQ,SAAS,aACZD,WAAW,QAEL,OAAPD,OAAcA,KAAK,GACtBnC,QAAQ,wBAAyB,CAC7BoC,WAAYA,WACZD,KAAMA,KACNK,WAAYN,WACZO,SAAU,EACVC,YAAYnB,OACZoB,aAAa,YAEjBvB,UAAU,OACVJ,MAAM4B,aAEN5B,MAAMC,UAAUI,GAAGwB,sBAAQ,WACnB9C,OAAO4B,YAAY,QACnBP,UAAU,YAGlBJ,MAAMC,UAAUI,GAAGyB,sBAAQ,WACL,UAAX1B,WAAiC,QAAXA,WAAmBrB,OAAO4B,YAAY,WAEpEX,SAGT+B,aAAa,CAACC,MAAOC,UAClBpB,GAAKoB,GAAGnB,WAAWC,QACnBC,KAAO,IAAIC,IAAIJ,IACfK,WAAW,EACXE,WAAW,GACZD,KAAK,OACJN,GAAGQ,SAAS,gBAAgBR,GAAGQ,SAAS,UAAUR,GAAGQ,SAAS,kBAGxD,EAENR,GAAGQ,SAAS,UAAUR,GAAGQ,SAAS,UACnCF,KAAKH,KAAKM,aAAaC,IAAI,OAE3BJ,KAAKH,KAAKM,aAAaC,IAAI,QAC3BL,WAAWF,KAAKM,aAAaC,IAAI,YAErB,OAAbL,aACCA,WAAW,GAEL,OAAPC,OAAcA,KAAK,GAClBN,GAAGQ,SAAS,WACZD,WAAW,SAEXP,GAAGQ,SAAS,YACZD,WAAW,UAEXP,GAAGQ,SAAS,aACZD,WAAW,QAEfpC,QAAQ,eAAgB,CACpBkD,IAAKD,GAAGC,IACRF,MAAOA,MACPG,QAASF,GAAGE,QACZC,WAAYlB,WACZC,KAAKA,KACLC,WAAWA,cAGnBrC,OAAOsB,GAAG,SAAUtB,SAChBgD,aAAa,QAAShD,WAE1BA,OAAOsB,GAAG,SAASgC,MAAAA,IAEZlD,YAAcE,cACbC,SAASC,MAGjBR,OAAOsB,GAAG,QAAQgC,MAAAA,IAEXlD,YAAeE,cACdC,SAASC,MAGjBR,OAAOsB,GAAG,WAAYtB,SAClBgD,aAAa,UAAWhD,WAE5BA,OAAOsB,GAAG,QAAQ"}